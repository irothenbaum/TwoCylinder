{"version":3,"sources":["webpack://twocylinder/webpack/universalModuleDefinition","webpack://twocylinder/webpack/bootstrap","webpack://twocylinder/./src/engine/utilities.js","webpack://twocylinder/./src/engine/root.js","webpack://twocylinder/./src/engine/generic.js","webpack://twocylinder/./src/engine/bounding/bounding.js","webpack://twocylinder/./src/engine/bounding/bounding_point.js","webpack://twocylinder/./src/engine/bounding/bounding_circle.js","webpack://twocylinder/./src/engine/bounding/bounding_box.js","webpack://twocylinder/./src/engine/vector.js","webpack://twocylinder/./src/engine/appearance.js","webpack://twocylinder/./src/engine/background.js","webpack://twocylinder/./src/io/event.js","webpack://twocylinder/./src/io/touch.js","webpack://twocylinder/./src/sprites/joystick.js","webpack://twocylinder/./src/build.js","webpack://twocylinder/./src/engine/controller.js","webpack://twocylinder/./src/engine/entity.js","webpack://twocylinder/./src/engine/game.js","webpack://twocylinder/./src/engine/particle.js","webpack://twocylinder/./src/engine/particle_emitter.js","webpack://twocylinder/./src/engine/view.js","webpack://twocylinder/./src/engine/world.js","webpack://twocylinder/./src/io/joystick.js"],"names":["Vector","require","Constants","TAU","Math","PI","Functions","disjoinArray2FromArray1","array1","array2","onEachMatchCallback","length","i","j","__id","splice","clone","obj","Object","assign","create","getPrototypeOf","Geometry","boxCollidesBox","box1","box2","xOverlap","origin_x","width","yOverlap","origin_y","height","boxCollidesCircle","box","circle","point1","x","y","point2","point3","point4","line1","line2","line3","line4","pointCollidesBox","lineCollidesCircle","boxCollidesPoint","point","circleCollidesCircle","circle1","circle2","distanceToPoint","radius","circleCollidesBox","circleCollidesLine","line","isSegment","cricle","circleCollidesPoint","pointCollidesCircle","lineIntersectsCircle","b","a","eDistAtoB","sqrt","pow","d","t","e","eDistCtoE","retVal","dt","f","lineCollidesPoint","push","g","parseInt","intersects","angleToPoint1","angleToPoint","angleToPoint2","pointCollidesPoint","pointCollidesLine","inDegrees","radians","atan2","pointToPoint","speed","direction","pointFromVector","vector","cos","getDirection","getSpeed","sin","getRandomDirection","random","module","exports","Root","Bounding","Generic","options","setBounding","bounding","_bounding","collides","rotation","entries","forEach","tuple","setCenter","r","key","value","updateBounding","BoundingBox","BoundingCircle","BoundingPoint","containingBox","getContainingRectangle","myBox","targetX","targetY","getCenter","min","max","__direction","__speed","dir","friction","currentDirection","directionDiff","setDirection","Appearance","canvas","scale","entity","context","getContext","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","Background","color","_color","view","getCanvas","containingRectangle","getBounding","fillRect","Event","TAP","DOUBLE","LONG","MOVE","UP","DOWN","evt","el","target","isNaN","offsetLeft","offsetTop","scrollLeft","scrollTop","offsetParent","_super","clientX","clientY","world_x","world_y","rect","getBoundingClientRect","device_x","left","device_y","top","timestamp","Date","now","linked_event","velocity","eventType","EVENT_TYPES","values","indexOf","type","Touch","__view","double","tap","tap_distance","_doubleTapThreshold","_tapThreshold","_tapDistanceThreshold","_longTapCancel","absolute","__boundToWorld","_lastUp","_lastDown","_lastMove","val","__getListenersByType","call","__key","__isDown","that","addEventListener","_handleDown","apply","arguments","preventDefault","_handleUp","_handleMove","getAppearance","draw","getRotation","getScale","app","__appearance","event","__formatTouchEvent","setType","__lastDown","__fireEvent","isDown","found","__lastUp","lastDownDiff","linkEvent","__lastMove","handlers","getType","callback","group","toUpperCase","shift","touches","changedTouches","step","prop","array","__formatListener","__on","__off","Joystick","joystick","getDrawOptions","operating","lineCap","moveTo","stick","lineTo","Controller","Entity","Game","Particle","ParticleEmitter","View","World","EngineContainer","UtilitiesContainer","IOContainer","JoystickSprite","SpritesContainer","Josystick","TwoCylinder","Engine","IO","Sprites","Utilities","world","worldClock","rotation_lag","appearance","setAppearance","_velocity","_rotationLag","_rotation","_collisionGroup","__collisionGroupListening","__visible","center_x","center_y","keys","other","collisionFunction","objectIsCollidable","groupIsCollidable","getCollisionGroup","hasOwnProperty","getVelocity","rotateTowards","setSpeed","isVisible","vis","__world","undefined","getWorld","start","exit","w","id","__emitter","emitter","clock","removeParticle","__particles","__toRemove","__isEmitting","__particleKey","getParticles","p","__removeParticles","isEmitting","particle","particleType","newParticle","__canvas","_scale","_resolution","resolution","style","__followInstance","__ios","__toRemoveIOs","__ioKey","clearRect","time","instances","particles","ios","setCenterWithinBounding","clearCanvas","getBackground","getInstances","inst","getParticleEmitters","part","__removeIOs","getIOs","io","s","instance","_fps","fps","__instances","__particleEmitters","__controllers","__views","__toRemoveParticleEmitters","__toRemoveInstances","__toRemoveControllers","__toRemoveViews","__collisionGroups","__background","background","__instanceKey","__viewKey","__emitterKey","__controllerKey","__clock","__intervalId","setInterval","loop","preStep","cont","postStep","__removeControllers","__removeParticleEmitters","__removeViews","__removeInstances","__preStep","me","hasCollisionChecking","myCollisionGroups","getCollidableGroups","handleCollidedWith","__postStep","clearInterval","__removeFromCollisionGroup","__addToCollisionGroup","setWorld","controller","defaultRadius","_defaultRadius","__isHeld","__pullRatio","__operateFunction","_previousEvent","onDown","onUp","onMove"],"mappings":"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","file":"twocylinder.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"twocylinder\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"twocylinder\"] = factory();\n\telse\n\t\troot[\"twocylinder\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n","const Vector = require('./vector')\r\n\r\nConstants = {\r\n    TAU : Math.PI * 2\r\n}\r\n\r\nFunctions = {\r\n    disjoinArray2FromArray1(array1, array2, onEachMatchCallback) {\r\n        if (!array2.length) {\r\n            return\r\n        }\r\n        let i\r\n        let j\r\n        for (i=0; i<array2.length; i++) {\r\n            for(j=0; j<array1.length; j++){\r\n                if(array1[j].__id === array2[i].__id){\r\n                    if (typeof onEachMatchCallback === 'function') {\r\n                        onEachMatchCallback(array1[j])\r\n                    }\r\n                    delete array1[j].__id\r\n                    array1.splice(j,1)\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    },\r\n    clone (obj) {\r\n        // TODO: Could this be improved? Taken from  https://stackoverflow.com/questions/41474986/how-to-clone-a-javascript-es6-class-instance\r\n        return Object.assign( Object.create( Object.getPrototypeOf(obj)), obj)\r\n    }\r\n}\r\n\r\nGeometry = {\r\n    /***************************************************\r\n     * BOXES\r\n     ***************************************************/\r\n    boxCollidesBox (box1, box2){\r\n        // both box1 and box 2 must have { x, y, width, height } properties\r\n        // if any part of box1's X is within box2's\r\n        let xOverlap = (\r\n            (\r\n                ( box1.origin_x <= box2.origin_x )\r\n                &&\r\n                ( (box1.origin_x + box1.width) > box2.origin_x )\r\n            )\r\n            ||\r\n            (\r\n                ( box2.origin_x <= box1.origin_x )\r\n                &&\r\n                ( (box2.origin_x + box2.width) > box1.origin_x )\r\n            )\r\n        )\r\n        let yOverlap = (\r\n            (\r\n                ( box1.origin_y <= box2.origin_y )\r\n                &&\r\n                ( (box1.origin_y + box1.height) > box2.origin_y )\r\n            )\r\n            ||\r\n            (\r\n                ( box2.origin_y <= box1.origin_y )\r\n                &&\r\n                ( (box2.origin_y + box2.height) > box1.origin_y )\r\n            )\r\n        )\r\n\r\n        return xOverlap && yOverlap\r\n    }\r\n    ,boxCollidesCircle (box, circle) {\r\n        let point1 = {x:box.origin_x, y:box.origin_y}\r\n        let point2 = {x:box.origin_x + box.width, y:box.origin_y}\r\n        let point3 = {x:box.origin_x + box.width, y:box.origin_y + box.height}\r\n        let point4 = {x:box.origin_x, y:box.origin_y + box.height}\r\n\r\n        let line1 = [point1,point2]\r\n        let line2 = [point2,point3]\r\n        let line3 = [point3,point4]\r\n        let line4 = [point4,point1]\r\n\r\n        return Geometry.pointCollidesBox(circle, box)\r\n            || Geometry.lineCollidesCircle(line1, circle, true)\r\n            || Geometry.lineCollidesCircle(line2, circle, true)\r\n            || Geometry.lineCollidesCircle(line3, circle, true)\r\n            || Geometry.lineCollidesCircle(line4, circle, true)\r\n    }\r\n    ,boxCollidesPoint (box, point){\r\n        return (\r\n            (\r\n                ( point.x >= box.origin_x )\r\n                &&\r\n                ( (box.origin_x + box.width) >= point.x )\r\n            )\r\n            &&\r\n            (\r\n                ( point.y >= box.origin_y )\r\n                &&\r\n                ( (box.origin_y + box.height) >= point.y )\r\n            )\r\n        )\r\n    }\r\n\r\n    /***************************************************\r\n     * CIRCLES\r\n     ***************************************************/\r\n    ,circleCollidesCircle (circle1, circle2){\r\n        return this.distanceToPoint(circle1,circle2) < (circle1.radius + circle2.radius)\r\n    }\r\n    ,circleCollidesBox (circle, box){\r\n        return Geometry.boxCollidesCircle(box,circle)\r\n    }\r\n    ,circleCollidesLine (circle,line, isSegment){\r\n        return Geometry.lineCollidesCircle(line,cricle,isSegment)\r\n    }\r\n    ,circleCollidesPoint (circle, point){\r\n        return Geometry.pointCollidesCircle(point, circle)\r\n    }\r\n\r\n\r\n    /***************************************************\r\n     * LINES\r\n     ***************************************************/\r\n    // This function returns an array of up to length 2 with points indicating at what points\r\n    // the given circle is intersected by the given line\r\n    ,lineIntersectsCircle (line, circle, isSegment){\r\n        let b = line[0]\r\n        let a = line[1]\r\n\r\n        // Calculate the euclidean distance between a & b\r\n        let eDistAtoB = Math.sqrt( Math.pow(b.x-a.x, 2) + Math.pow(b.y-a.y, 2) )\r\n\r\n        // compute the direction vector d from a to b\r\n        let d = { x : (b.x-a.x)/eDistAtoB, y : (b.y-a.y)/eDistAtoB }\r\n\r\n        // Now the line equation is x = dx*t + ax, y = dy*t + ay with 0 <= t <= 1.\r\n\r\n        // compute the value t of the closest point to the circle center (cx, cy)\r\n        let t = (d.x * (circle.x-a.x)) + (d.y * (circle.y-a.y))\r\n\r\n        // compute the coordinates of the point e on line and closest to c\r\n        let e = {\r\n            x : (t * d.x) + a.x,\r\n            y : (t * d.y) + a.y\r\n        }\r\n\r\n        // Calculate the euclidean distance between circle & e\r\n        let eDistCtoE = Math.sqrt( Math.pow(e.x-circle.x, 2) + Math.pow(e.y-circle.y, 2) )\r\n\r\n        let retVal = []\r\n\r\n        // test if the line intersects the circle\r\n        if( eDistCtoE < circle.radius ) {\r\n            // compute distance from t to circle intersection point\r\n            let dt = Math.sqrt( Math.pow(circle.radius, 2) - Math.pow(eDistCtoE, 2))\r\n\r\n            // compute first intersection point\r\n            let f = {\r\n                x : ((t-dt) * d.x) + a.x,\r\n                y : ((t-dt) * d.y) + a.y\r\n            }\r\n\r\n            if(!isSegment || Geometry.lineCollidesPoint(line, f, true)){\r\n                retVal.push(f)\r\n            }\r\n\r\n            // compute second intersection point\r\n            let g = {\r\n                x : ((t+dt) * d.x) + a.x,\r\n                y : ((t+dt) * d.y) + a.y\r\n            }\r\n\r\n            if(!isSegment || Geometry.lineCollidesPoint(line, g, true)){\r\n                retVal.push(g)\r\n            }\r\n        } else if (parseInt(eDistCtoE) === parseInt(circle.radius)) {\r\n            if(!isSegment || Geometry.lineCollidesPoint(line, e, true)){\r\n                retVal.push(e)\r\n            }\r\n        } else {\r\n            // do nothing, no intersection\r\n        }\r\n\r\n        return retVal\r\n    }\r\n\r\n    // true IFF a line passes through or tangent to a given circle\r\n    ,lineCollidesCircle (line, circle, isSegment){\r\n        let intersects = Geometry.lineIntersectsCircle(line, circle, isSegment)\r\n        return intersects.length > 0 || Geometry.pointCollidesCircle(line[0],circle)\r\n    }\r\n\r\n    ,lineCollidesPoint (line, point, isSegment){\r\n        let angleToPoint1 = Geometry.angleToPoint(line[0],point)\r\n        let angleToPoint2 = Geometry.angleToPoint(line[1],point)\r\n\r\n        let retVal = angleToPoint1 === angleToPoint2\r\n\r\n        // if the angle is off, we swap the order of two of the points for one of the measurements\r\n        // this simulates the 180 degree check\r\n        if(!retVal){\r\n            angleToPoint2 = Geometry.angleToPoint(point, line[1])\r\n            retVal = angleToPoint1 === angleToPoint2\r\n        }\r\n\r\n        if(retVal && isSegment){\r\n            retVal = Geometry.distanceToPoint(line[0],point) + Geometry.distanceToPoint(line[1],point)\r\n                === Geometry.distanceToPoint(line[0],line[1])\r\n        }\r\n\r\n        return retVal\r\n    }\r\n\r\n\r\n    /***************************************************\r\n     * POINTS\r\n     ***************************************************/\r\n    ,pointCollidesCircle (point, circle){\r\n        return Geometry.distanceToPoint(point,circle) <= circle.radius\r\n    }\r\n    ,pointCollidesBox (point, box){\r\n        return Geometry.boxCollidesPoint(box, point)\r\n    }\r\n    ,pointCollidesPoint (point1, point2){\r\n        return (\r\n            ( point1.x === point2.x )\r\n            &&\r\n            ( point1.y === point2.y )\r\n        )\r\n    }\r\n    ,pointCollidesLine (point, line){\r\n        return Geometry.lineCollidesPoint(line,point)\r\n    }\r\n\r\n    /***************************************************\r\n     * ANGLES AND DISTANCES\r\n     ***************************************************/\r\n    ,distanceToPoint (point1, point2){\r\n        let x = point1.x - point2.x\r\n        let y = point1.y - point2.y\r\n\r\n        return Math.sqrt( x*x + y*y )\r\n    }\r\n    ,angleToPoint (point1, point2, inDegrees){\r\n        let radians = Math.atan2(point2.y - point1.y, point2.x - point1.x)\r\n        return inDegrees ? ( radians * 180 / Math.PI ) : radians\r\n    }\r\n    /**\r\n     * @param {{x:*. y:*}} point1\r\n     * @param {{x:*. y:*}} point2\r\n     * @returns {Vector}\r\n     */\r\n    ,pointToPoint (point1, point2){\r\n        return new Vector({\r\n            speed : Geometry.distanceToPoint(point1,point2),\r\n            direction : Geometry.angleToPoint(point1,point2)\r\n        })\r\n    }\r\n    /**\r\n     * @param {{x:*,y:*}} point1\r\n     * @param {Vector} vector\r\n     * @returns {{x: *, y: *}}\r\n     */\r\n    ,pointFromVector (point1, vector){\r\n        return {\r\n            x : point1.x + Math.cos(vector.getDirection()) * vector.getSpeed(),\r\n            y : point1.y + Math.sin(vector.getDirection()) * vector.getSpeed()\r\n        }\r\n    }\r\n    ,getRandomDirection () {\r\n        return Math.random() * 2 * Math.PI\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    Geometry,\r\n    Functions,\r\n    Constants\r\n}","class Root {\r\n    constructor() {\r\n\r\n    }\r\n}\r\n\r\nmodule.exports = Root","const Root = require('./root')\r\nconst Bounding = require ('./bounding/bounding')\r\n\r\nclass Generic extends Root {\r\n\r\n    constructor (options) {\r\n        super (options)\r\n        this.setBounding(options.bounding)\r\n    }\r\n\r\n    collides (bounding) {\r\n        return this._bounding && this._bounding.collides(bounding)\r\n    }\r\n\r\n    getBounding () {\r\n        return this._bounding\r\n    }\r\n\r\n    setBounding (b) {\r\n        if(!b && ! (b instanceof Bounding)){\r\n            throw \"All objects must have a true bounding\"\r\n        }\r\n        return this._bounding = b\r\n    }\r\n}\r\n\r\nmodule.exports = Generic","/*\r\n    Profiles are used to remove the ambiguity with determining bounding box\r\n*/\r\n\r\nconst Root = require('../root')\r\n\r\nclass Bounding extends Root {\r\n    constructor (options){\r\n        super(options)\r\n        this.rotation = 0;\r\n        Object.entries(options).forEach((tuple) => {\r\n            this[tuple[0]] = tuple[1]\r\n        })\r\n    }\r\n    getCenter (){\r\n        return { x : null, y : null };\r\n    }\r\n    setCenter (tuple){\r\n        return null;\r\n    }\r\n    setCenterWithinContainer (tuple,bounding){\r\n        // if not implemented, just set the center normal style\r\n        return this.setCenter(tuple);\r\n    }\r\n    getContainingRectangle (){\r\n        return { origin_x : null, origin_y : null, width : null, height : null};\r\n    }\r\n    getRotation (){\r\n        return null;\r\n    }\r\n    setRotation (r){\r\n        this.rotation = r;\r\n    }\r\n    updateBounding (key, value){\r\n        if(typeof key === 'object'){\r\n            Object.entries(key).forEach((tuple) => {\r\n                this.updateBounding(...tuple)\r\n            })\r\n        }else{\r\n            this[key] = value\r\n        }\r\n        return this;\r\n    }\r\n    collides (bounding){\r\n        return false;\r\n    }\r\n}\r\n\r\nmodule.exports = Bounding","// CircleProfiles need a center point and a radius\r\n\r\nconst Bounding = require('./bounding')\r\nconst Geometry = require('../utilities').Geometry\r\nconst BoundingBox = require('./bounding_box')\r\nconst BoundingCircle = require('./bounding_circle')\r\n\r\nclass BoundingPoint extends Bounding {\r\n    getCenter (){\r\n        return { x : this.x, y : this.y };\r\n    }\r\n    setCenter (tuple){\r\n        this.x = tuple.x\r\n        this.y = tuple.y\r\n    }\r\n    getContainingRectangle (){\r\n        return{\r\n            origin_x : this.x\r\n            ,origin_y : this.y\r\n            ,width : 0\r\n            ,height : 0\r\n        }\r\n    }\r\n    collides (bounding){\r\n        if(bounding instanceof BoundingBox){\r\n            return Geometry.pointCollidesBox(this,bounding)\r\n        }else if(bounding instanceof BoundingCircle){\r\n            return Geometry.pointCollidesCircle(this,bounding)\r\n        }else if(bounding instanceof BoundingPoint){\r\n            return Geometry.pointCollidesPoint(this,bounding)\r\n        }else if(bounding instanceof Bounding){ \r\n            // if it's not a rectangle, circle, or point, it could be a new type of bounding\r\n            // in which case we let it handle the collision checking\r\n            return bounding.collides(this)\r\n        }else{ // treat bounding like a tuple\r\n            return Geometry.circleCollidesPoint(this, bounding)\r\n        }\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = BoundingPoint","// CircleProfiles need a center point and a radius\r\n\r\nconst Bounding = require('./bounding')\r\nconst Geometry = require('../utilities').Geometry\r\nconst BoundingBox = require('./bounding_box')\r\nconst BoundingPoint = require('./bounding_point')\r\n\r\nclass BoundingCircle extends Bounding {\r\n    getCenter (){\r\n        return { x : this.x, y : this.y };\r\n    }\r\n    setCenter (tuple){\r\n        this.x = tuple.x;\r\n        this.y = tuple.y;\r\n    }\r\n    getContainingRectangle (){\r\n        return{\r\n            origin_x : this.x - this.radius\r\n            ,origin_y : this.y - this.radius\r\n            ,width : 2 * this.radius\r\n            ,height : 2 * this.radius\r\n        }\r\n    }\r\n    collides (bounding){\r\n        if(bounding instanceof BoundingBox){\r\n            return Geometry.circleCollidesBox(this,bounding)\r\n        }else if(bounding instanceof BoundingCircle){\r\n            return Geometry.circleCollidesCircle(this,bounding);\r\n        }else if(bounding instanceof BoundingPoint){\r\n            return Geometry.circleCollidesPoint(this,bounding);\r\n        }else if(bounding instanceof Bounding){\r\n            // if it's not a rectangle, circle, or point, it could be a new type of bounding\r\n            // in which case we let it handle the collision checking\r\n            return bounding.collides(this);\r\n        }else{ // treat bounding like a tuple\r\n            return Geometry.circleCollidesPoint(this, bounding);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = BoundingCircle","// RectangleProfiles need an origin x,y and a width and height\r\nconst Bounding = require('./bounding')\r\nconst Geometry = require('../utilities').Geometry\r\nconst BoundingCircle = require('./bounding_circle')\r\nconst BoundingPoint = require('./bounding_point')\r\n\r\nclass BoundingBox extends Bounding {\r\n    getCenter (){\r\n        return {\r\n            x : this.origin_x + (this.width / 2)\r\n            , y : this.origin_y + (this.height / 2)\r\n        };\r\n    }\r\n    setCenter (tuple){\r\n        this.origin_x = tuple.x - (this.width / 2);\r\n        this.origin_y = tuple.y - (this.height / 2);\r\n    }\r\n    // TODO: This won't work properly with circles... Perhaps move it to the Geometry function and treat it like collisions\r\n    setCenterWithinBounding (tuple, bounding){\r\n        let containingBox = bounding.getContainingRectangle();\r\n        let myBox = this.getContainingRectangle();\r\n        \r\n        \r\n        let targetX = tuple.x;\r\n        let targetY = tuple.y;\r\n        \r\n        if(containingBox.width < myBox.width){\r\n            targetX = bounding.getCenter().x;\r\n        }else{\r\n            // to center within we take the min between x and the containingbox edge - 1/2 my width\r\n            targetX = Math.min(tuple.x, containingBox.origin_x + containingBox.width - (myBox.width/2) );\r\n            // then max it with the same on the other end\r\n            targetX = Math.max(targetX, containingBox.origin_x + (myBox.width/2));\r\n            // this ensures, when centered, our left and right edges do not cross the containingBox borders \r\n        }\r\n        \r\n        // Then, do it again for height\r\n        \r\n        if(containingBox.height < myBox.height){\r\n            targetY = bounding.getCenter().y;\r\n        }else{\r\n            // to center within we take the min between x and the containingbox edge - 1/2 my width\r\n            targetY = Math.min(tuple.y, containingBox.origin_y + containingBox.height - (myBox.height/2) );\r\n            // then max it with the same on the other end\r\n            targetY = Math.max(targetY, containingBox.origin_y + (myBox.height/2));\r\n            // this ensures, when centered, our left and right edges do not cross the containingBox borders\r\n        }\r\n        \r\n        this.setCenter({ x : targetX , y : targetY });\r\n    }\r\n\r\n    getContainingRectangle (){\r\n        return {\r\n            origin_x : this.origin_x\r\n            ,origin_y : this.origin_y\r\n            ,width : this.width\r\n            ,height : this.height\r\n        };\r\n    }\r\n\r\n    collides (bounding){\r\n        if(bounding instanceof BoundingBox){\r\n            return Geometry.boxCollidesBox(this,bounding)\r\n        }else if(bounding instanceof BoundingCircle){\r\n            return Geometry.boxCollidesCircle(this,bounding);\r\n        }else if(bounding instanceof BoundingPoint){\r\n            return Geometry.boxCollidesPoint(this,bounding);\r\n        }else if(bounding instanceof Bounding){\r\n            // if it's not a rectangle, circle, or point, it could be a new type of bounding\r\n            // in which case we let it handle the collision checking\r\n            return bounding.collides(this);\r\n        }else{ // treat bounding like a tuple\r\n            return Geometry.boxCollidesPoint(this, bounding);\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = BoundingBox","/*\r\n This script defines the Vector object\r\n */\r\n\r\nconst Root = require('./root')\r\nconst Constants = require('./utilities').Constants\r\n\r\nclass Vector extends Root {\r\n    constructor (options) {\r\n        super (options)\r\n        options = Object.assign({\r\n            direction : 0,\r\n            speed : 0\r\n        },options)\r\n\r\n        this.__direction = options.direction\r\n        this.__speed = options.speed\r\n    }\r\n// ------------------------------------\r\n// GETTERS / SETTERS\r\n// ------------------------------------\r\n    getDirection (){\r\n        return this.__direction\r\n    }\r\n    getSpeed (){\r\n        return this.__speed\r\n    }\r\n    setDirection (dir){\r\n        this.__direction = dir\r\n    }\r\n    setSpeed  (speed) {\r\n        this.__speed = speed\r\n    }\r\n// ------------------------------------\r\n// CONVENIENCE FUNCTIONS\r\n// ------------------------------------\r\n    rotateTowards (dir, friction){\r\n        let currentDirection = this.getDirection()\r\n        let directionDiff = (dir + Constants.TAU - currentDirection) % Constants.TAU\r\n\r\n        friction = friction ? friction : 1\r\n        if (directionDiff <= (Math.PI) ){\r\n            this.setDirection(currentDirection + (directionDiff / friction))\r\n        }else{\r\n            this.setDirection(currentDirection - ( ( directionDiff - Math.PI ) / friction))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = Vector","/*\r\n    This script defines an appearance.\r\n    Appearances are attached to instances and define how that instance should be drawn in the world\r\n*/\r\n\r\nconst Generic = require('./generic')\r\n\r\nclass Appearance extends Generic {\r\n    constructor (options) {\r\n        super(options)\r\n    }\r\n    \r\n    draw (canvas, x, y, rotation, scale, entity){\r\n        let context = canvas.getContext('2d');\r\n        context.beginPath();\r\n        context.arc(x, y, 20, 0, 2 * Math.PI, false);\r\n        context.fillStyle = 'grey';\r\n        context.fill();\r\n        context.lineWidth = 5;\r\n        context.strokeStyle = '#333333';\r\n        context.stroke();\r\n    }\r\n}\r\n\r\nmodule.exports = Appearance","/*\r\n    Backgrounds are objects that control how the game background should appear. \r\n    At most, there should be one per world. \r\n*/\r\n\r\nconst Root = require('./root')\r\n\r\nclass Background extends Root {\r\n    constructor (options) {\r\n        super(options)\r\n        options = Object.assign({\r\n            color : 'transparent'\r\n        }, options)\r\n        this._color = options.color\r\n    }\r\n    draw (view){\r\n        let canvas = view.getCanvas()\r\n        let containingRectangle = view.getBounding().getContainingRectangle()\r\n        let context = canvas.getContext('2d')\r\n        context.beginPath()\r\n        context.fillStyle = this._color\r\n        context.fillRect(0,0,containingRectangle.width,containingRectangle.height)\r\n        context.fill()\r\n        context.stroke()\r\n    }\r\n}\r\n\r\nmodule.exports = Background","/*\r\n    This script creates a basic user interface\r\n*/\r\n\r\nconst BoundingPoint = require('../engine/bounding/bounding_point')\r\nconst Geometry = require('../engine/utilities').Geometry\r\n\r\nclass Event extends BoundingPoint {\r\n    static get EVENT_TYPES() {\r\n        return {\r\n            TAP : 'tap',\r\n            DOUBLE : 'doubletap',\r\n            LONG :'longtap',\r\n            MOVE : 'mousemove',\r\n            UP : 'mouseup',\r\n            DOWN : 'mousedown'\r\n        };\r\n    }\r\n\r\n    constructor (evt, view){\r\n        super (evt, view)\r\n        // -----------------------------------------------------\r\n        // This part was taken from Stack Overflow\r\n        // http://stackoverflow.com/questions/8389156\r\n        let el = evt.target,\r\n            x = 0,\r\n            y = 0\r\n\r\n        while (el && !isNaN(el.offsetLeft) && !isNaN(el.offsetTop)) {\r\n            x += el.offsetLeft - el.scrollLeft\r\n            y += el.offsetTop - el.scrollTop\r\n            el = el.offsetParent\r\n        }\r\n        // -----------------------------------------------------\r\n        \r\n        this._super('initialize',{\r\n            x : evt.clientX - x\r\n            ,y : evt.clientY - y\r\n        })\r\n        \r\n        if (view){\r\n            this.world_x = this.x + view.getBounding().origin_x\r\n            this.world_y = this.y + view.getBounding().origin_y\r\n            let rect = view.getCanvas().getBoundingClientRect()\r\n            this.device_x = this.x + rect.left\r\n            this.device_y = this.y + rect.top\r\n        }\r\n        \r\n        this.timestamp = Date.now()\r\n    }\r\n    linkEvent (evt){\r\n        // we want them to only link events\r\n        if(evt instanceof Event){\r\n            this.linked_event = evt; \r\n            this.velocity = Geometry.pointToPoint(this.linked_event, this)\r\n        }\r\n        \r\n        return this\r\n    }\r\n    setType (eventType){\r\n        if(Event.EVENT_TYPES.values().indexOf(eventType) === -1){\r\n            throw \"Invalid event type\"\r\n        }\r\n        this.type = eventType\r\n        return this\r\n    }\r\n    getType (){\r\n        return this.type ? this.type : null;\r\n    }\r\n}\r\n\r\n\r\nmodule.exports = Event","/*\r\n    This script creates a basic user interface\r\n*/\r\n\r\nconst Event = require('./event')\r\nconst Geometry = require('../engine/utilities').Geometry\r\nconst Generic = require('../engine/generic')\r\n\r\nclass Touch extends Generic {\r\n    constructor (options){\r\n        super(options)\r\n        this.__view = options.view\r\n        \r\n        //by default the touch location is the full canvas\r\n        options = Object.assign({\r\n            bounding : this.__view.getBounding()\r\n            ,double : 300\r\n            ,tap : 300\r\n            ,tap_distance : 20\r\n        }, options)\r\n        \r\n        this.setBounding(options.bounding)\r\n        \r\n        this._doubleTapThreshold = options.double\r\n        this._tapThreshold = options.tap\r\n        this._tapDistanceThreshold = options.tap_distance\r\n        this._longTapCancel = 2 * this._tapThreshold\r\n        \r\n        // absolute touch boxes are bound to the world which means the calculate touching\r\n        // via worldy coordinate systems as opposed to the view's relative coordinates [default]\r\n        if(options.absolute){\r\n            this.__boundToWorld = true\r\n        }\r\n        \r\n        // these events store the last events -- TODO : Maybe make them arrays? Store the trailing events?\r\n        this._lastUp = null\r\n        this._lastDown = null\r\n        this._lastMove = null\r\n        \r\n        // create a listener for each type of event\r\n        Event.EVENT_TYPES.forEach((val) => {\r\n            this.__getListenersByType.call(this,val)\r\n        })\r\n        \r\n        // id is set by the view when the touch object is inserted\r\n        this.__id = null\r\n\r\n        // key is used to track touch listeners\r\n        this.__key = 0\r\n        \r\n        // used to check if the touch is currently down\r\n        this.__isDown = false\r\n        \r\n        // What follows are the browser event binding calls\r\n        let that = this\r\n        this.__view.getCanvas().addEventListener('mousedown',function(evt){\r\n            that._handleDown.apply(that,arguments)\r\n        },false)\r\n        this.__view.getCanvas().addEventListener('touchstart',function(evt){\r\n            evt.preventDefault()\r\n            that._handleDown.apply(that,arguments)\r\n        },false)\r\n        \r\n        this.__view.getCanvas().addEventListener('mouseup',function(evt){\r\n            that._handleUp.apply(that,arguments)\r\n        },false)\r\n        this.__view.getCanvas().addEventListener('touchend',function(evt){\r\n            evt.preventDefault()\r\n            that._handleUp.apply(that,arguments)\r\n        },false)\r\n        \r\n        this.__view.getCanvas().addEventListener('mousemove',function(evt){\r\n            that._handleMove.apply(that,arguments)\r\n        },false)\r\n        this.__view.getCanvas().addEventListener('touchmove',function(evt){\r\n            evt.preventDefault()\r\n            that._handleMove.apply(that,arguments)\r\n        },false)\r\n    }\r\n    /*\r\n     * If this touch has an appearance, we draw it\r\n     */\r\n    draw (){\r\n        if(this.getAppearance()){\r\n            this.getAppearance().draw(\r\n                this.__view.getCanvas(), \r\n                this.getBounding().getCenter().x,\r\n                this.getBounding().getCenter().y, \r\n                this.__view.getRotation(),\r\n                this.__view.getScale(),\r\n                this\r\n            )\r\n        }\r\n    }\r\n    /*\r\n     * Appearance will be important for extended objects wishing to give the touch zones a visual represenation\r\n     */\r\n    setAppearance (app){\r\n        this.__appearance = app\r\n    }\r\n    \r\n    getAppearance (app){\r\n        return this.__appearance\r\n    }\r\n    \r\n    /*\r\n     * These function receive a browser event and determin whether or not\r\n     * to fire an IO event to listeners based on collision type, location, and touch state\r\n     * They are also responsible with properly formatting the IO event (determining if it's\r\n     * a single tap, double tap, move, etc...)\r\n     */\r\n    _handleDown (evt){\r\n        let event = this.__formatTouchEvent(evt)\r\n        if(!event){\r\n            return\r\n        }\r\n        event.setType(Event.EVENT_TYPES.DOWN)\r\n\r\n        this.__isDown = true\r\n        this.__lastDown = event\r\n        this.__fireEvent(event)\r\n    }\r\n    _handleUp (evt){\r\n        let event = this.__formatTouchEvent(evt)\r\n        if(!event){\r\n            return\r\n        }\r\n        \r\n        if(!this.isDown()){\r\n            return\r\n        }\r\n        \r\n        // found is used to determine if we've already assigned a type to this event before checking for others\r\n        // it's really just a helper variable so we can avoid deeply nested if / else ifs\r\n        let found = false\r\n        \r\n        // first we check for DOUBLE tap\r\n        if( this.__lastUp \r\n            && this.__lastUp.type == Event.EVENT_TYPES.TAP \r\n            && (this.__lastUp.timestamp - event.timestamp) <= this._doubleTapThreshold\r\n        ){\r\n            event.setType(Event.EVENT_TYPES.DOUBLE)\r\n            found = true\r\n        }\r\n        \r\n        // next we check for LONG tap\r\n        if(!found && this.__lastDown && (Geometry.distanceToPoint(this.__lastDown, event) < this._tapDistanceThreshold)){\r\n            let lastDownDiff = event.timestamp - this.__lastDown.timestamp\r\n            if(lastDownDiff <= this._tapThreshold){\r\n                event.setType(Event.EVENT_TYPES.TAP)\r\n                found = true\r\n            }else if(lastDownDiff <= this._longTapCancel){\r\n                event.setType(Event.EVENT_TYPES.LONG)\r\n                found = true\r\n            }else{\r\n                // do nothing, we're cancelling the long click\r\n            }\r\n        }\r\n        \r\n        // at this point, it must be the end of a move, so we give it a default\r\n        if(!found){\r\n            event.setType(Event.EVENT_TYPES.UP)\r\n        }\r\n        \r\n        event.linkEvent(this.__lastDown)\r\n        this.__lastUp = event\r\n        this.__fireEvent(event)\r\n        this.__isDown = false\r\n    }\r\n    _handleMove (evt){\r\n        if( !this.isDown()){\r\n            return\r\n        }\r\n        \r\n        let event = this.__formatTouchEvent(evt)\r\n        if(!event){\r\n            return\r\n        }\r\n        \r\n        if( \r\n            ( (event.timestamp - this.__lastDown.timestamp) <= this._longTapCancel)\r\n            &&\r\n            (Geometry.distanceToPoint(this.__lastDown, event) < this._tapDistanceThreshold)\r\n        ){\r\n            // if they haven't moved their finger enough and we're within the longtap threshold\r\n            return\r\n        }\r\n            \r\n        event.setType(Event.EVENT_TYPES.MOVE)\r\n        event.linkEvent(this.__lastMove)\r\n        this.__lastMove = event\r\n        this.__fireEvent(event)\r\n        \r\n    }\r\n    /*\r\n     * This function takes an IO Event and fires it to all bound listeners of its type\r\n     */\r\n    __fireEvent (event){\r\n        let handlers = this.__getListenersByType(event.getType())\r\n        if(handlers.length){\r\n            for(let i=0; i<handlers.length; i++){\r\n                handlers[i].callback(event)\r\n            }\r\n        }\r\n    }\r\n    /*\r\n     * This function will be used to queue previous events to  store a history rather than just\r\n     * the last one (lastMove, lastUp, lastDown)\r\n     */\r\n    __queueHistory (group,event){\r\n        group[0] = group[0].toUpperCase()\r\n        this['__last'+group].push(event)\r\n        this['__last'+group].shift()\r\n        return null\r\n    }\r\n    \r\n    /*\r\n     * This function might be uneeded? It basically adds all listeners to an array so we can\r\n     * potentially more easily track them (by key)\r\n     */\r\n    __formatListener (callback){\r\n        return {\r\n            key : ++this.__key\r\n            ,callback : callback\r\n        }\r\n    }\r\n    /*\r\n     * This function takes a browser event (mouse or touch) and converts it into a TwoCylinder IO event\r\n     * IFF it registered a collision with this touch space else it returns false \r\n     */ \r\n    __formatTouchEvent (evt){\r\n        //TODO: I'm not sure if this.collides will work for views that are not origin_x = 0, origin_y = 0\r\n        // BECAUSE, I think the event's x and y is relative to the device and the touch instance is relative\r\n        // to the world view (I THINK)\r\n        \r\n        // changed Touches is used for multitouch... ?\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/TouchEvent/changedTouches\r\n        \r\n        let touches = evt.changedTouches ? evt.changedTouches : []\r\n\r\n        if(touches.length){\r\n            let event = false\r\n            let step = 0\r\n            \r\n            do{\r\n                if(step < touches.length){\r\n                    evt.clientX = touches[step].clientX\r\n                    evt.clientY = touches[step].clientY\r\n                }else{\r\n                    return false\r\n                }\r\n                event = new Event(evt,this.__view)\r\n                step++\r\n            }while(!this.collides(event))\r\n        }else{\r\n            event = new Event(evt,this.__view)\r\n            if(!this.collides(event)){\r\n                return false\r\n            }\r\n        }\r\n                \r\n        return event\r\n    }\r\n    /*\r\n     * WARNING: A bit of reflection here. Be careful...\r\n     * This function returns all bound listeners based on type\r\n     */\r\n    __getListenersByType (type){\r\n        if(!type){\r\n            return null\r\n        }\r\n        let prop = '__'+type+'Listeners'\r\n        if(!this[prop]){\r\n            this[prop] = []\r\n        }\r\n        return this[prop]\r\n    }\r\n    \r\n    /*\r\n     * This function is used to bind a handler to a certain type of IO event\r\n     */\r\n    __on (type,callback){\r\n        let array = this.__getListenersByType(type)\r\n        array.push(this.__formatListener(callback))\r\n    }\r\n    /*\r\n     * This function removes a passed binding\r\n     */\r\n    __off (type,callback){\r\n        let array = this.__getListenersByType(type)\r\n        for(let i=0; i<array.length; i++){\r\n            if(array[i].callback === callback){\r\n                delete array[i]\r\n            }\r\n        }\r\n    }\r\n    \r\n    /*\r\n     * The following are helper functions to make calling __on and __off more semantic\r\n     */\r\n    onDouble (callback){\r\n        this.__on(Event.EVENT_TYPES.DOUBLE,callback)\r\n    }\r\n    offDouble (callback){\r\n        this.__off(Event.EVENT_TYPES.DOUBLE,callback)\r\n    }\r\n    onLong (callback){\r\n        this.__on(Event.EVENT_TYPES.LONG,callback)\r\n    }\r\n    offLong (callback){\r\n        this.__off(Event.EVENT_TYPES.LONG,callback)\r\n    }\r\n    \r\n    onTap (callback){\r\n        this.__on(Event.EVENT_TYPES.TAP,callback)\r\n    }\r\n    offTap (callback){\r\n        this.__off(Event.EVENT_TYPES.TAP,callback)\r\n    }\r\n    \r\n    onDown (callback){\r\n        this.__on(Event.EVENT_TYPES.DOWN,callback)\r\n    }\r\n    offDown (callback){\r\n        this.__off(Event.EVENT_TYPES.DOWN,callback)\r\n    }\r\n    \r\n    onMove (callback){\r\n        this.__on(Event.EVENT_TYPES.MOVE,callback)\r\n    }\r\n    offMove (callback){\r\n        this.__off(Event.EVENT_TYPES.MOVE,callback)\r\n    }\r\n    \r\n    onUp (callback){\r\n        this.__on(Event.EVENT_TYPES.UP,callback)\r\n    }\r\n    offUp (callback){\r\n        this.__off(Event.EVENT_TYPES.UP,callback)\r\n    }\r\n    \r\n    /*\r\n     * This function can determine if this touch instance is being actively engaged\r\n     */\r\n    isDown (){\r\n        return this.__isDown\r\n    }\r\n}\r\n\r\nmodule.exports = Touch\r\n","/*\r\n    This script handles drawing the joystick appearance\r\n*/\r\n\r\nconst Appearance = require('../engine/appearance')\r\nconst BoundingCircle = require('../engine/bounding/bounding_circle')\r\n\r\nclass Joystick extends Appearance {\r\n    constructor (){\r\n        let options = {\r\n            bounding : new BoundingCircle({\r\n                x : 0\r\n                ,y : 0\r\n                ,radius : 20\r\n            })\r\n        }\r\n        \r\n        super(options)\r\n    }\r\n    draw (canvas,x,y,rotation,scale,joystick){\r\n        let options = joystick.getDrawOptions()\r\n        let context = canvas.getContext('2d')\r\n        \r\n        // if the joystick is being operated, we draw the binding circle\r\n        if(options.operating){\r\n            context.beginPath()\r\n            context.arc(x, y, 160, 0, 2 * Math.PI, false)\r\n            context.fillStyle = 'rgba(0,255,0,0.1)'\r\n            context.fill()\r\n            context.lineWidth = 3\r\n            context.strokeStyle = 'rgba(0,255,0,0.3)'\r\n            context.stroke()\r\n        }\r\n        \r\n        context.beginPath()\r\n        context.arc(x, y, 20, 0, 2 * Math.PI, false)\r\n        context.fillStyle = '#000000'\r\n        context.fill()\r\n        context.lineWidth = 5\r\n        context.strokeStyle = '#303030'\r\n        context.stroke()\r\n        \r\n        context.beginPath()\r\n        context.lineWidth = 18\r\n        context.strokeStyle = '#333333'\r\n        context.lineCap = 'round'\r\n        context.moveTo(options.stick.x, options.stick.y)\r\n        context.lineTo(x, y)\r\n        context.stroke()\r\n        \r\n        context.beginPath()\r\n        context.arc(options.stick.x, options.stick.y, 18, 0, 2 * Math.PI, false)\r\n        context.fillStyle = '#dd2222'\r\n        context.fill()\r\n        context.lineWidth = 5\r\n        context.strokeStyle = '#aa1111'\r\n        context.stroke()\r\n        \r\n        context.beginPath()\r\n        context.arc(options.stick.x + 6, options.stick.y - 6, 4, 0, 2 * Math.PI, false)\r\n        context.fillStyle = '#ffcccc'\r\n        context.fill()\r\n    }\r\n}\r\n\r\nmodule.exports = Joystick","const Bounding = require('./engine/bounding/bounding')\r\nconst BoundingPoint = require('./engine/bounding/bounding_point')\r\nconst BoundingCircle = require('./engine/bounding/bounding_circle')\r\nconst BoundingBox = require('./engine/bounding/bounding_box')\r\n\r\nconst Appearance = require('./engine/appearance')\r\nconst Background = require('./engine/background')\r\nconst Controller = require('./engine/controller')\r\nconst Entity = require('./engine/entity')\r\nconst Game = require('./engine/game')\r\nconst Generic = require('./engine/generic')\r\nconst Particle = require('./engine/particle')\r\nconst ParticleEmitter = require('./engine/particle_emitter')\r\nconst Root = require('./engine/root')\r\nconst Vector = require('./engine/vector')\r\nconst View = require('./engine/view')\r\nconst World = require('./engine/world')\r\n\r\nlet EngineContainer = {\r\n    Bounding,\r\n    BoundingBox,\r\n    BoundingCircle,\r\n    BoundingPoint,\r\n    Appearance,\r\n    Controller,\r\n    Background,\r\n    Entity,\r\n    Game,\r\n    Generic,\r\n    ParticleEmitter,\r\n    Particle,\r\n    Root,\r\n    World,\r\n    View,\r\n    Vector\r\n}\r\n\r\nconst {\r\n    Functions,\r\n    Geometry,\r\n    Constants\r\n} = require('./engine/utilities')\r\n\r\nlet UtilitiesContainer = {\r\n    Functions,\r\n    Constants,\r\n    Geometry,\r\n}\r\n\r\nconst Event = require('./io/event')\r\nconst Touch = require('./io/touch')\r\nconst Joystick = require('./io/joystick')\r\n\r\nlet IOContainer = {\r\n    Event,\r\n    Touch,\r\n    Joystick\r\n}\r\n\r\n\r\nconst JoystickSprite = require('./sprites/joystick')\r\nlet SpritesContainer = {\r\n    Josystick: JoystickSprite\r\n}\r\n\r\nTwoCylinder = {\r\n    Engine: EngineContainer,\r\n    IO: IOContainer,\r\n    Sprites: SpritesContainer,\r\n    Utilities: UtilitiesContainer\r\n};\r\n\r\nmodule.exports = TwoCylinder","const Root = require('./root')\r\n\r\nclass Controller extends Root {\r\n    constructor(options) {\r\n        super(options)\r\n        this.world = options.world\r\n    }\r\n\r\n    preStep (worldClock){\r\n        return\r\n    }\r\n    step (worldClock){\r\n        return\r\n    }\r\n    postStep (worldClock){\r\n        return\r\n    }\r\n}\r\n\r\nmodule.exports = Controller","const Generic = require('./generic')\r\nconst Appearance = require('./appearance')\r\nconst Vector = require('./vector')\r\nconst BoundingPoint = require('./bounding/bounding_point')\r\n\r\nclass Entity extends Generic {\r\n    constructor (options){\r\n        super(options)\r\n\r\n        // -------------------------------\r\n        this.__appearance = null\r\n\r\n        options = Object.assign({\r\n            velocity : null // Vector :: the instance's velocity vector\r\n            ,rotation : 0 // float :: the instance's this.__appearance rotation\r\n            ,rotation_lag : 20 // int :: the number of steps it will take to turnTowards a target direction\r\n        }, options)\r\n\r\n        if(options.appearance){\r\n            this.setAppearance(options.appearance)\r\n        }\r\n\r\n        this._velocity = options.velocity\r\n        this._rotationLag = options.rotation_lag\r\n        this._rotation = options.rotation\r\n        this._collisionGroup = 'ENTITY'\r\n\r\n        // -------------------------------\r\n\r\n        // id is set by the world when it's inserted\r\n        this.__id = null\r\n        this.__collisionGroupListening = {}\r\n\r\n        this.__visible = true;           // boolean  :: is this instance visible\r\n    }\r\n\r\n    // draw is called by a view.\r\n    // the view passes a callback function which is called IFF this instance is to be drawn\r\n    // passed to that function is important information that will be forwarded to the Instance's this.__appearance\r\n    draw (view, center_x, center_y) {\r\n        this.getAppearance().draw(\r\n            view.getCanvas(),\r\n            center_x,\r\n            center_y,\r\n            view.getRotation() * this._rotation, // TODO: this is probably wrong? haven't tested\r\n            view.getScale(),\r\n            this\r\n        )\r\n    }\r\n    preStep (worldClock){\r\n        return\r\n    }\r\n    step (worldClock){\r\n        if(this.getSpeed()){\r\n            this.getBounding().setCenter({\r\n                x : this.getBounding().getCenter().x + this.getSpeed() * Math.cos(this.getDirection())\r\n                ,y : this.getBounding().getCenter().y + this.getSpeed() * Math.sin(this.getDirection())\r\n            })\r\n\r\n            if(this.getAppearance()){\r\n                this.getAppearance().getBounding().setCenter(this.getBounding().getCenter())\r\n            }\r\n        }\r\n    }\r\n    postStep (worldClock){\r\n        return\r\n    }\r\n    /****************************************************************************\r\n     COLLISIONS AND COLLISION CHECKING\r\n     ****************************************************************************/\r\n\r\n    // this will return what collision group this entity belongs to\r\n    getCollisionGroup (){\r\n        return this._collisionGroup\r\n    }\r\n\r\n    getCollidableGroups (){\r\n        return Object.keys(this.__collisionGroupListening)\r\n    }\r\n\r\n    // this function passes an other instance and signifies a collision has occurred\r\n    // this instance then determines if it should react to the collision or not\r\n    handleCollidedWith (other){\r\n        let collisionFunction = this.objectIsCollidable(other)\r\n        if(collisionFunction){\r\n            collisionFunction.apply(this,[other])\r\n        }\r\n    }\r\n\r\n    groupIsCollidable (group){\r\n        let retVal = false\r\n        if(this.__collisionGroupListening[other]){\r\n            retVal = this.__collisionGroupListening[other]\r\n        }\r\n        return retVal\r\n    }\r\n\r\n    // this function will return the collision function for a passed Entity instance\r\n    // or false IFF there is no corresponding collision function\r\n    objectIsCollidable (other){\r\n        let retVal = false\r\n\r\n        if (other instanceof Entity) {\r\n            return this.groupIsCollidable(other.getCollisionGroup())\r\n        }\r\n\r\n        return retVal\r\n    }\r\n\r\n    // this will return true IFF this object is listening for collisions\r\n    hasCollisionChecking (){\r\n        return this.__collisionGroupListening.hasOwnProperty\r\n    }\r\n\r\n    // ----------------------\r\n\r\n    // this collision function handles collisions between this instance and instances of a specified Group\r\n    onCollideGroup (group, callback){\r\n        this.__collisionGroupListening[group] = callback\r\n    }\r\n\r\n    offCollideGroup (group){\r\n        delete this.__collisionGroupListening[group]\r\n    }\r\n\r\n    /****************************************************************************\r\n     GETERS AND SETTERS\r\n     ****************************************************************************/\r\n\r\n    getPosition (){\r\n        return this.getBounding().getCenter()\r\n    }\r\n\r\n    /**\r\n     * tuple can either be a boundingPoint, tuple (x & y) or just x (in which case y is y)\r\n     */\r\n    setPosition (tuple, y){\r\n        if(tuple instanceof BoundingPoint){\r\n            this.getBounding().updateBounding(tuple.getCenter())\r\n        }else if(typeof tuple === 'object'){\r\n            this.getBounding().updateBounding({x:tuple.x,y:tuple.y})\r\n        }else{\r\n            this.getBounding().updateBounding(tuple,y)\r\n        }\r\n    }\r\n\r\n    // ----------------------\r\n\r\n    /**\r\n     * app is an Appearance object\r\n     * when setting an this.__appearance object, you can also change the collision box by passing new collision dimensions\r\n     * \"box\" can either be a tuple (width & height) or just width in which case h is height\r\n     */\r\n    setAppearance (app){\r\n        if (!(app instanceof Appearance)) {\r\n            throw \"Appearance must be a instance of Appearance\"\r\n        }\r\n        this.__appearance = app\r\n    }\r\n\r\n    // This function defines how to draw this instance\r\n    getAppearance (){\r\n        return this.__appearance\r\n    }\r\n\r\n    // ----------------------\r\n\r\n    getDirection (){\r\n        return this.getVelocity().getDirection()\r\n    }\r\n    rotateTowards (dir){\r\n        this.getVelocity().rotateTowards(dir, this._rotationLag)\r\n    }\r\n    setDirection (dir){\r\n        this.getVelocity().setDirection(dir)\r\n\r\n        return this.getDirection()\r\n    }\r\n\r\n    getSpeed (){\r\n        return this.getVelocity().getSpeed()\r\n    }\r\n\r\n    setSpeed (speed){\r\n        this.getVelocity().setSpeed(speed)\r\n    }\r\n\r\n    setVelocity (velocity) {\r\n        this._velocity = velocity\r\n    }\r\n    getVelocity () {\r\n        if (!this._velocity) {\r\n            this._velocity = new Vector()\r\n        }\r\n        return this._velocity\r\n    }\r\n\r\n    // ----------------------\r\n\r\n    getVisible (){\r\n        return this.isVisible()\r\n    }\r\n\r\n    isVisible (){\r\n        // must be in the world, visible, and with an appearance\r\n        return this.__id && this.__visible && !!this.__appearance\r\n    }\r\n\r\n    setVisible (vis){\r\n        this.__visible =  vis\r\n    }\r\n}\r\n\r\nmodule.exports = Entity","const Root = require('./root')\r\n\r\nclass Game extends Root {\r\n    constructor() {\r\n        super()\r\n        this.__world = undefined;\r\n    }\r\n\r\n    start() {\r\n        return this.getWorld().start();\r\n    }\r\n\r\n    exit() {\r\n        return this.getWorld().exit();\r\n    }\r\n\r\n    setWorld(w) {\r\n        this.__world = w;\r\n    }\r\n\r\n    getWorld() {\r\n        return this.__world;\r\n    }\r\n}\r\n\r\nmodule.exports = Game","/*\r\n This script defines the particle object\r\n */\r\nconst Root = require('./root')\r\n\r\n\r\nclass Particle extends Root {\r\n    constructor(options) {\r\n        super(options)\r\n        options = Object.assign({}, options)\r\n        this.__id = options.id\r\n        this.__emitter = options.emitter\r\n    }\r\n    // This function is responsible for moving the particle or otherwise tracking its lifecycle\r\n    step (clock) {\r\n        return null\r\n    }\r\n    draw (canvas,x,y,rotation,scale,emitter){\r\n        let context = canvas.getContext('2d')\r\n        context.beginPath()\r\n        context.arc(x, y, 20, 0, 2 * Math.PI, false)\r\n        context.fillStyle = 'grey'\r\n        context.fill()\r\n        context.lineWidth = 5\r\n        context.strokeStyle = '#333333'\r\n        context.stroke()\r\n    }\r\n    destroy () {\r\n        this.__emitter.removeParticle(this)\r\n    }\r\n}\r\n\r\nmodule.exports = Particle\r\n","const Functions = require('./utilities').Functions\r\nconst Generic = require('./generic')\r\n\r\nclass ParticleEmitter extends Generic {\r\n    constructor(options) {\r\n        super(options)\r\n\r\n        // -------------------------------\r\n        this.__particles = []\r\n        this.__toRemove = []\r\n\r\n        // by default, newly created emitters do not emit until told to\r\n        this.__isEmitting = false\r\n\r\n        // an internal id counter\r\n        this.__particleKey = 0\r\n\r\n        // id is set by the world when it's inserted\r\n        this.__id = null\r\n    }\r\n    // an emitter drawing basically just calls draw on all its particles\r\n    // particles are like appearances, but without bounding boxes - they just get drawn if the emitter is in\r\n    // collision with the view\r\n    draw (view, center_x, center_y){\r\n        this.getParticles().forEach((p) => {\r\n            p.draw(view.getCanvas(),\r\n                center_x,\r\n                center_y,\r\n                view.getRotation() * this._rotation,\r\n                view.getScale(),\r\n                this)\r\n        })\r\n    }\r\n    step (clock) {\r\n        this.getParticles().forEach((p) => {\r\n            p.step(clock)\r\n        })\r\n\r\n        this.__removeParticles()\r\n    }\r\n    destroy () {\r\n        this.__particles = []\r\n    }\r\n    setIsEmitting(isEmitting) {\r\n        this.__isEmitting = isEmitting\r\n    }\r\n    getIsEmitting() {\r\n        return this.__isEmitting\r\n    }\r\n\r\n    /****************************************************************************\r\n     PARTICLES\r\n     ****************************************************************************/\r\n    getParticles () {\r\n        return this.__particles\r\n    }\r\n    removeParticle (particle) {\r\n        this.__toRemove.push(particle)\r\n    }\r\n\r\n    __removeParticles (particle) {\r\n        Functions.disjoinArray2FromArray1(this.__particles, this.__toRemove)\r\n        this.__toRemove = []\r\n    }\r\n    /**\r\n     * It may be advantageous for particle emitters to emit particles one at a time\r\n     * rather than repeatedly. In that case, this function can be used\r\n     * @param {function} particleType\r\n     * @param {object} options\r\n     */\r\n    emitParticle(particleType, options) {\r\n        let newParticle\r\n\r\n        options = Object.assign({\r\n            id : ++this.__particleKey,\r\n            emitter : this\r\n        }, options)\r\n        newParticle = new particleType(options)\r\n        this.__particles.push(newParticle)\r\n\r\n        return newParticle\r\n    }\r\n}\r\n\r\nmodule.exports = ParticleEmitter","/*\r\n    This script defines a this.__world's view.\r\n    Views are attached to this.__worlds and help determine which instances should be drawn to the this.__canvas and where\r\n*/\r\n\r\nconst Generic = require('./generic')\r\nconst Functions = require('./utilities').Functions\r\n\r\nclass View extends Generic {\r\n    constructor (options){\r\n        super(options)\r\n        this.__canvas = options.canvas\r\n        \r\n        this._rotation = options.rotation || 0\r\n        this._scale = options.scale || 1\r\n        this._resolution = options.resolution || 1\r\n        \r\n        this.__canvas.width = this.getBounding().width * this._resolution\r\n        this.__canvas.height = this.getBounding().height * this._resolution\r\n        this.__canvas.style.width = this.getBounding().width + \"px\"\r\n        this.__canvas.style.height = this.getBounding().height + \"px\"\r\n        \r\n        this.__followInstance = false\r\n        \r\n        this.__ios = []\r\n        this.__toRemoveIOs = []\r\n        this.__ioKey = 0\r\n\r\n        // id is set by the world when it's inserted\r\n        this.__id = null\r\n    }\r\n    clearCanvas (){\r\n        this.__canvas.getContext('2d').clearRect(0,0,this.__canvas.width,this.__canvas.height)\r\n    }\r\n    draw (time){\r\n        let i\r\n        let instances\r\n        let particles\r\n        let ios\r\n        let that = this\r\n\r\n        // before we draw, we want to re-center on our tracked instance if we have one\r\n        if(this.__followInstance){\r\n            this.getBounding().setCenterWithinBounding(\r\n                this.__followInstance.getBounding().getCenter()\r\n                , this.__world.getBounding()\r\n            )\r\n        }\r\n        \r\n        // prepare to draw\r\n        this.clearCanvas()\r\n        \r\n        // first draw the world's background\r\n        this.__world.getBackground().draw(this)\r\n        \r\n        // get all instances and loop through them\r\n        this.__world.getInstances().forEach((inst) => {\r\n            // skip invisible instances\r\n            if(!inst.isVisible()){\r\n                return\r\n            }\r\n            // if this instance's appearance is inside this view box\r\n            // NOTE: we check the appearance's bounding because it may be desirable for the calculated collision box\r\n            // to be different from what is considered visible. for example, if the appearance draws shadows\r\n            // those shadows might not be collidable with other entities, but should be included in\r\n            // determining whether or not to draw the entity to a view.\r\n            if( that.collides( inst.getAppearance().getBounding() ) ){\r\n                //then we draw the instance and pass the view so it can reference the view's\r\n                //transitions and transformation (rotation, scale, etc)\r\n                inst.draw(\r\n                    that\r\n                    ,inst.getBounding().getCenter().x - that.getBounding().getContainingRectangle().origin_x\r\n                    ,inst.getBounding().getCenter().y - that.getBounding().getContainingRectangle().origin_y\r\n                )\r\n            }\r\n        })\r\n\r\n        // Draw each particle emitter\r\n        this.__world.getParticleEmitters().forEach((part) => {\r\n            if (that.collides(part.getBounding())) {\r\n                part.draw(\r\n                    that,\r\n                    part.getBounding().getCenter().x - that.getBounding().getContainingRectangle().origin_x,\r\n                    part.getBounding().getCenter().y - that.getBounding().getContainingRectangle().origin_y\r\n                )\r\n            }\r\n        })\r\n\r\n        // check if any IOs have been removed\r\n        this.__removeIOs()\r\n\r\n        //now we loop through the IO handlers for this view\r\n        this.getIOs().forEach((io) => {\r\n            io.draw()\r\n        })\r\n    }\r\n/****************************************************************************\r\nGETTER AND SETTER FUNCTIONS\r\n****************************************************************************/\r\n    getCanvas (){\r\n        return this.__canvas\r\n    }\r\n    getWorld (){\r\n        return this.__world\r\n    }\r\n    setWorld (world){\r\n        this.__world = world\r\n    }\r\n    getRotation (){\r\n        return this._rotation\r\n    }\r\n    setRotation (r){\r\n        this._rotation = r\r\n    }\r\n    getScale (){\r\n        return this._scale\r\n    }\r\n    setScale (s){\r\n        this._scale = s\r\n    }\r\n/****************************************************************************\r\nIO FUNCTIONS\r\n****************************************************************************/    \r\n    removeIO (io){\r\n        if(io.__id){\r\n            this.__toRemoveIOs.push(io)\r\n        }\r\n        \r\n        return io\r\n    }\r\n    __removeIOs () {\r\n        Functions.disjoinArray2FromArray1(this.__ios, this.__toRemoveIOs)\r\n\r\n        this.__toRemoveIOs = []\r\n    }\r\n    addIO(io){\r\n        if(io.__id){\r\n            throw \"IO already added\"\r\n        }\r\n        io.__id = ++this.__ioKey\r\n\r\n        this.__ios.push(io)\r\n       \r\n        return io\r\n    }\r\n   \r\n    getIOs() {\r\n        return this.__ios\r\n    }\r\n    \r\n    // this gets the mouse position by world, view, and device OR any one of them as an x,y tuple\r\n    getMousePosition (evt) {\r\n        return new TwoCylinder.IO.Event(evt, this)\r\n    }\r\n    \r\n    followInstance (instance){\r\n        if(instance){\r\n            this.__followInstance = instance\r\n        } else {\r\n            this.__followInstance = false\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = View","const Generic = require('./generic')\r\nconst Background = require('./background')\r\nconst BoundingBox = require('./bounding/bounding_box')\r\nconst Functions = require('./utilities').Functions\r\n\r\nclass World extends Generic {\r\n    constructor (options) {\r\n        options.bounding = new BoundingBox({\r\n            origin_x : 0\r\n            ,origin_y : 0\r\n            ,width : options.width\r\n            ,height : options.height\r\n        })\r\n        super(options)\r\n        this._fps = options.fps || 30\r\n\r\n        this.__instances = []\r\n        this.__particleEmitters = []\r\n        this.__controllers = []\r\n        this.__views = []\r\n\r\n        this.__toRemoveParticleEmitters = []\r\n        this.__toRemoveInstances = []\r\n        this.__toRemoveControllers = []\r\n        this.__toRemoveViews = []\r\n\r\n        this.__collisionGroups = {}\r\n        this.__background = options.background || new Background()\r\n\r\n        this.__instanceKey = 0\r\n        this.__viewKey = 0\r\n        this.__emitterKey = 0\r\n        this.__controllerKey = 0\r\n        this.__clock = 0\r\n    }\r\n\r\n    //TODO: Needs to somehow sync touch events up with the game clock\r\n    start (){\r\n        this.__intervalId = setInterval(() => {\r\n            try{\r\n                this.loop.apply(this, [])\r\n            } catch (e) {\r\n                this.exit(e)\r\n            }\r\n        }, 1000 / this._fps)\r\n    }\r\n\r\n    __preStep (time){\r\n        // we have each instance perform a frame step.\r\n        this.__instances.forEach((inst) => {\r\n            inst.preStep(time)\r\n        })\r\n\r\n        // we have each instance perform a frame step.\r\n        this.__controllers.forEach((cont) => {\r\n            cont.preStep(time)\r\n        })\r\n    }\r\n\r\n    __postStep (time){\r\n        // we have each instance perform a frame step.\r\n        this.__instances.forEach((inst) => {\r\n            inst.postStep(time)\r\n        })\r\n\r\n        // we have each instance perform a frame step.\r\n        this.__controllers.forEach((cont) => {\r\n            cont.postStep(time)\r\n        })\r\n\r\n        this.__removeControllers()\r\n        this.__removeParticleEmitters()\r\n        this.__removeViews()\r\n        this.__removeInstances()\r\n    }\r\n\r\n    loop (){\r\n        this.__preStep(++this.__clock)\r\n\r\n        // we have each instance perform a frame step.\r\n        this.__controllers.forEach((cont) => {\r\n            cont.step(this.__clock)\r\n        })\r\n\r\n        // we have each instance perform a frame step.\r\n        this.__particleEmitters.forEach((part) => {\r\n            part.step(this.__clock)\r\n        })\r\n\r\n        // we have each instance perform a frame step.\r\n        this.__instances.forEach((inst) => {\r\n            inst.step(this.__clock)\r\n        })\r\n\r\n        // check for collisions\r\n        this.__instances.forEach((me) => {\r\n            if (me.hasCollisionChecking()) {\r\n                let myCollisionGroups = me.getCollidableGroups()\r\n                myCollisionGroups.forEach((group) => {\r\n                    // if there are instances that match the groups im listening for\r\n                    if (this.__collisionGroups[group] && this.__collisionGroups[group].length) {\r\n\r\n                        // for each of those matching instance types,\r\n                        this.__collisionGroups[group].forEach( (other) => {\r\n\r\n                            // if they're not me, and I collide with them\r\n                            if (me.__id !== other.__id && me.collides(other.getBounding())) {\r\n                                me.handleCollidedWith(other)\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n            }\r\n        })\r\n\r\n        // draw the views\r\n        this.__views.forEach((view) => {\r\n            view.draw(this.__clock)\r\n        })\r\n\r\n        this.__postStep(this.__clock)\r\n    }\r\n\r\n    exit (){\r\n        clearInterval(this.__intervalId)\r\n\r\n        //TODO: handle exit\r\n    }\r\n\r\n    /****************************************************************************\r\n     INSTANCE FUNCTIONS\r\n     ****************************************************************************/\r\n    removeInstance (instance){\r\n        if(instance.__id){\r\n            // we add their id to the array of instances to remove\r\n            this.__toRemoveInstances.push(instance)\r\n        }\r\n        return instance\r\n    }\r\n    __removeInstances () {\r\n        if (!this.__toRemoveInstances.length) {\r\n            return\r\n        }\r\n        Functions.disjoinArray2FromArray1(this.__instances, this.__toRemoveInstances, this.__removeFromCollisionGroup)\r\n        this.__toRemoveInstances = []\r\n    }\r\n\r\n    addInstance (instance){\r\n        if(instance.__id){\r\n            throw \"Instance already added\"\r\n        }\r\n        instance.__id = ++this.__instanceKey\r\n        // add it to the big list\r\n        this.__instances.push(instance)\r\n        // also add it according to its collision group\r\n        this.__addToCollisionGroup(instance)\r\n\r\n        return instance\r\n    }\r\n\r\n    getInstances (){\r\n        return this.__instances\r\n    }\r\n\r\n    /****************************************************************************\r\n     VIEW FUNCTIONS\r\n     ****************************************************************************/\r\n    addView (view){\r\n        if (view.__id) {\r\n            throw \"View already added\"\r\n        }\r\n        view.__id = ++this.__viewKey\r\n        view.setWorld(this)\r\n        this.__views.push(view)\r\n\r\n        return view\r\n    }\r\n\r\n    getViews (){\r\n        return this.__views\r\n    }\r\n\r\n    __removeViews () {\r\n        if (!this.__toRemoveViews.length) {\r\n            return\r\n        }\r\n        Functions.disjoinArray2FromArray1(this.__views, this.__toRemoveViews)\r\n\r\n        this.__toRemoveViews = []\r\n    }\r\n\r\n    removeView (view){\r\n        if(view.__id) {\r\n            // we add them to the array of views to remove\r\n            this.__toRemoveViews.push(view)\r\n        }\r\n        return view\r\n    }\r\n\r\n    /****************************************************************************\r\n     PARTICLE FUNCTIONS\r\n     ****************************************************************************/\r\n    addParticleEmitter (emitter){\r\n        if (emitter.__id){\r\n            throw \"Emitter already added\"\r\n        }\r\n        emitter.__id = ++this.__emitterKey\r\n        this.__particleEmitters.push(emitter)\r\n        return emitter\r\n    }\r\n\r\n    removeParticleEmitter (emitter){\r\n        if (emitter.__id) {\r\n            // we add their id to the array of emitters to remove\r\n            this.__toRemoveParticleEmitters.push(emitter)\r\n        }\r\n        return emitter\r\n    }\r\n    __removeParticleEmitters (){\r\n        if (!this.__toRemoveParticleEmitters.length) {\r\n            return\r\n        }\r\n        Functions.disjoinArray2FromArray1(this.__particleEmitters, this.__toRemoveParticleEmitters)\r\n\r\n        this.__toRemoveParticleEmitters = []\r\n    }\r\n    getParticleEmitters () {\r\n        return this.__particleEmitters\r\n    }\r\n\r\n    /****************************************************************************\r\n     PARTICLE FUNCTIONS\r\n     ****************************************************************************/\r\n    addController (controller){\r\n        if (controller.__id){\r\n            throw \"Emitter already added\"\r\n        }\r\n        controller.__id = ++this.__controllerKey\r\n        this.__controllers.push(controller)\r\n        return controller\r\n    }\r\n\r\n    removeController (controller){\r\n        if (controller.__id) {\r\n            // we add their id to the array of emitters to remove\r\n            this.__toRemoveControllers.push(controller)\r\n        }\r\n        return controller\r\n    }\r\n    __removeControllers (){\r\n        if (!this.__toRemoveControllers.length) {\r\n            return\r\n        }\r\n        Functions.disjoinArray2FromArray1(this.__controllers, this.__toRemoveControllers)\r\n\r\n        this.__toRemoveControllers = []\r\n    }\r\n    getControllers () {\r\n        return this.__controllers\r\n    }\r\n\r\n    /****************************************************************************\r\n     BACKGROUND FUNCTIONS\r\n     ****************************************************************************/\r\n    setBackground (background){\r\n        this.__background = background\r\n    }\r\n\r\n    getBackground (){\r\n        return this.__background\r\n    }\r\n    /****************************************************************************\r\n     HELPER FUNCTIONS\r\n     ****************************************************************************/\r\n    __addToCollisionGroup (instance){\r\n        let group = instance.getCollisionGroup()\r\n\r\n        if(!this.__collisionGroups[group]){\r\n            this.__collisionGroups[group] = []\r\n        }\r\n        this.__collisionGroups[group].push(instance)\r\n    }\r\n    __removeFromCollisionGroup (instance){\r\n        let i\r\n        let group = instance.getCollisionGroup()\r\n\r\n        if (!this.__collisionGroups[group]) {\r\n            throw \"Collision Group does not exist\"\r\n        }\r\n\r\n        for(i=0; i<this.__collisionGroups[group].length; i++){\r\n            if(this.__collisionGroups[group][i].__id === instance.__id){\r\n                this.__collisionGroups[group].splice(i,1)\r\n                break\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = World","/*\r\n    This script handles drawing the joystick appearance\r\n*/\r\n\r\nconst Touch = require('./touch')\r\nconst BoundingCircle = require('../engine/bounding/bounding_circle')\r\nconst {Geometry, Functions} = require('../engine/utilities')\r\nconst JoystickSprite = require('../sprites/joystick')\r\n\r\nclass Joystick extends Touch {\r\n    constructor (options){\r\n        let defaultRadius = 40\r\n        options.tap_distance = 0\r\n        options.bounding = new BoundingCircle({\r\n            x : options.x\r\n            ,y : options.y\r\n            ,radius : defaultRadius\r\n        })\r\n        super (options)\r\n        this._defaultRadius = defaultRadius\r\n\r\n        this.__isHeld = false\r\n        \r\n        this.__pullRatio = 1.8\r\n        \r\n        // the operate function is what we will pass joystick motions to\r\n        this.__operateFunction = null\r\n        \r\n        this.__appearance = new JoystickSprite()\r\n        \r\n        this._previousEvent = null\r\n        \r\n        this.onDown((evt) => {\r\n            this._previousEvent = evt; //initialize evt\r\n            \r\n            // we link to itself so that the joystick draws properly\r\n            this._previousEvent.linkEvent(evt)\r\n\r\n            this.getBounding().updateBounding({\r\n                radius : 4 * this._defaultRadius\r\n            })\r\n            \r\n            if(typeof this.__operateFunction === 'function'){\r\n                if (evt.velocity) {\r\n                    evt.velocity.setSpeed(0)\r\n                }\r\n                this.__operateFunction(evt)\r\n            }\r\n        })\r\n        \r\n        this.onUp((evt) => {\r\n            this.getBounding().updateBounding({\r\n                radius : this._defaultRadius\r\n            })\r\n            delete this._previousEvent\r\n            \r\n            if(typeof this.__operateFunction === 'function'){\r\n                if (evt.velocity) {\r\n                    evt.velocity.setSpeed(0)\r\n                }\r\n                this.__operateFunction(evt)\r\n            }\r\n        })\r\n        \r\n        this.onMove((evt) => {\r\n            if (this.isDown()){\r\n                evt.linkEvent(this.__lastDown)\r\n                if(typeof(this.__operateFunction) === 'function'){\r\n                    //want to make the max speed the distance we allow the joystick to move\r\n                    if (evt.velocity) {\r\n                        evt.velocity.setSpeed(Math.min(evt.velocity.getSpeed(), this._defaultRadius / this.__pullRatio))\r\n                    }\r\n                    this.__operateFunction(evt)\r\n                }\r\n                this._previousEvent = evt\r\n            }\r\n        })\r\n    }\r\n    onOperate (callback){\r\n        this.__operateFunction = callback\r\n    }\r\n    offOperate (){\r\n        delete this.__operateFunction; \r\n    }\r\n    getDrawOptions () {\r\n        let options = {\r\n            stick : this.getBounding().getCenter()\r\n            ,operating : this.isDown()\r\n        }\r\n        \r\n        if(this._previousEvent && this._previousEvent.velocity){\r\n            let vector = Functions.clone(this._previousEvent.velocity)\r\n            vector.setSpeed(Math.min(this._defaultRadius / this.__pullRatio, this._previousEvent.velocity.getSpeed()))\r\n            options.stick = Geometry.pointFromVector(options.stick, vector)\r\n        }\r\n        \r\n        return options\r\n    }\r\n}\r\n\r\nmodule.exports = Joystick"],"sourceRoot":""}